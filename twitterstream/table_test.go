package twitterstream_test

import (
    ts "github.com/darkhelmet/twitterstream"
)

var (
    tableTests = []StructTest{
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "favorited",
            JsonValues:   []interface{}{nil, true, false},
            StructField:  "Favorited",
            StructValues: []*bool{nil, booladdr(true), booladdr(false)},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "id",
            JsonValues:   float64s(1, 10, 25000),
            StructField:  "Id",
            StructValues: []int64{1, 10, 25000},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "created_at",
            JsonValues:   []interface{}{"Wed Aug 27 13:08:45 +0000 2008"},
            StructField:  "CreatedAt",
            StructValues: []ts.Time{mustParseTime("Wed Aug 27 13:08:45 +0000 2008")},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "in_reply_to_screen_name",
            JsonValues:   []interface{}{nil, "twitter", "batman"},
            StructField:  "InReplyToScreenName",
            StructValues: []*string{nil, straddr("twitter"), straddr("batman")},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "in_reply_to_status_id",
            JsonValues:   float64s(nil, 123, 12345),
            StructField:  "InReplyToStatusId",
            StructValues: []*int64{nil, int64addr(123), int64addr(12345)},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "in_reply_to_status_id_str",
            JsonValues:   []interface{}{nil, "123", "12345"},
            StructField:  "InReplyToStatusIdStr",
            StructValues: []*string{nil, straddr("123"), straddr("12345")},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "in_reply_to_user_id",
            JsonValues:   float64s(nil, 123, 12345),
            StructField:  "InReplyToUserId",
            StructValues: []*int64{nil, int64addr(123), int64addr(12345)},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "in_reply_to_user_id_str",
            JsonValues:   []interface{}{nil, "123", "12345"},
            StructField:  "InReplyToUserIdStr",
            StructValues: []*string{nil, straddr("123"), straddr("12345")},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "possibly_sensitive",
            JsonValues:   []interface{}{nil, true, false},
            StructField:  "PossiblySensitive",
            StructValues: []*bool{nil, booladdr(true), booladdr(false)},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "withheld_scope",
            JsonValues:   []interface{}{"", "status", "location"},
            StructField:  "WithheldScope",
            StructValues: []string{"", "status", "location"},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "withheld_in_countries",
            JsonValues:   []interface{}{"", "US", "RU, CN, AU"},
            StructField:  "WithheldInCountries",
            StructValues: []string{"", "US", "RU, CN, AU"},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "retweeted",
            JsonValues:   []interface{}{true, false},
            StructField:  "Retweeted",
            StructValues: []bool{true, false},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "truncated",
            JsonValues:   []interface{}{true, false},
            StructField:  "Truncated",
            StructValues: []bool{true, false},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "source",
            JsonValues:   []interface{}{"", "web"},
            StructField:  "Source",
            StructValues: []string{"", "web"},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "text",
            JsonValues:   []interface{}{"", "wat", "superbatman and a bunch of stuff"},
            StructField:  "Text",
            StructValues: []string{"", "wat", "superbatman and a bunch of stuff"},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "retweet_count",
            JsonValues:   float64s(0, 10, 2500),
            StructField:  "RetweetCount",
            StructValues: []int{0, 10, 2500},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "place",
            JsonValues:   []interface{}{nil},
            StructField:  "Place",
            StructValues: []*ts.Place{nil},
        },
        StructTest{
            Struct:       ts.Tweet{},
            JsonField:    "coordinates",
            JsonValues:   []interface{}{nil},
            StructField:  "Coordinates",
            StructValues: []*ts.Point{nil},
        },
        StructTest{
            Struct:       ts.Contributor{},
            JsonField:    "id",
            JsonValues:   float64s(1, 10),
            StructField:  "Id",
            StructValues: []int64{1, 10},
        },
        StructTest{
            Struct:       ts.Place{},
            JsonField:    "country",
            JsonValues:   []interface{}{"Canada", "United States"},
            StructField:  "Country",
            StructValues: []string{"Canada", "United States"},
        },
        StructTest{
            Struct:       ts.Place{},
            JsonField:    "country_code",
            JsonValues:   []interface{}{"CA", "US"},
            StructField:  "CountryCode",
            StructValues: []string{"CA", "US"},
        },
        StructTest{
            Struct:       ts.Place{},
            JsonField:    "full_name",
            JsonValues:   []interface{}{"Canada", "United States"},
            StructField:  "FullName",
            StructValues: []string{"Canada", "United States"},
        },
        StructTest{
            Struct:       ts.Place{},
            JsonField:    "id",
            JsonValues:   []interface{}{"edmonton"},
            StructField:  "Id",
            StructValues: []string{"edmonton"},
        },
        StructTest{
            Struct:       ts.Place{},
            JsonField:    "name",
            JsonValues:   []interface{}{"San Diego", "Edmonton"},
            StructField:  "Name",
            StructValues: []string{"San Diego", "Edmonton"},
        },
        StructTest{
            Struct:       ts.Place{},
            JsonField:    "place_type",
            JsonValues:   []interface{}{"City", "Country"},
            StructField:  "Type",
            StructValues: []string{"City", "Country"},
        },
        StructTest{
            Struct:       ts.Place{},
            JsonField:    "url",
            JsonValues:   []interface{}{"http://api.twitter.com/1/geo/id/sandiego.json"},
            StructField:  "Url",
            StructValues: []string{"http://api.twitter.com/1/geo/id/sandiego.json"},
        },
        StructTest{
            Struct:       ts.Medium{},
            JsonField:    "id",
            JsonValues:   float64s(1, 22, 555),
            StructField:  "Id",
            StructValues: []int64{1, 22, 555},
        },
        StructTest{
            Struct:       ts.Medium{},
            JsonField:    "id_str",
            JsonValues:   []interface{}{"1", "22", "12345"},
            StructField:  "IdStr",
            StructValues: []string{"1", "22", "12345"},
        },
        StructTest{
            Struct:       ts.Medium{},
            JsonField:    "media_url",
            JsonValues:   []interface{}{"foo", "https://dev.twitter.com/docs/tweet-entities"},
            StructField:  "MediaUrl",
            StructValues: []string{"foo", "https://dev.twitter.com/docs/tweet-entities"},
        },
        StructTest{
            Struct:       ts.Medium{},
            JsonField:    "media_url_https",
            JsonValues:   []interface{}{"foo", "https://dev.twitter.com/docs/tweet-entities"},
            StructField:  "SecureMediaUrl",
            StructValues: []string{"foo", "https://dev.twitter.com/docs/tweet-entities"},
        },
        StructTest{
            Struct:       ts.Medium{},
            JsonField:    "url",
            JsonValues:   []interface{}{"foo", "https://dev.twitter.com/docs/tweet-entities"},
            StructField:  "Url",
            StructValues: []string{"foo", "https://dev.twitter.com/docs/tweet-entities"},
        },
        StructTest{
            Struct:       ts.Medium{},
            JsonField:    "display_url",
            JsonValues:   []interface{}{"foo", "https://dev.twitter.com/docs/tweet-entities"},
            StructField:  "DisplayUrl",
            StructValues: []string{"foo", "https://dev.twitter.com/docs/tweet-entities"},
        },
        StructTest{
            Struct:       ts.Medium{},
            JsonField:    "expanded_url",
            JsonValues:   []interface{}{nil, "foo", "https://dev.twitter.com/docs/tweet-entities"},
            StructField:  "ExpandedUrl",
            StructValues: []*string{nil, straddr("foo"), straddr("https://dev.twitter.com/docs/tweet-entities")},
        },
        StructTest{
            Struct:       ts.Medium{},
            JsonField:    "indices",
            JsonValues:   [][]interface{}{float64s(5, 10), float64s(0, 9)},
            StructField:  "Indices",
            StructValues: []ts.IndexPair{ts.IndexPair{5, 10}, ts.IndexPair{0, 9}},
        },
        StructTest{
            Struct:       ts.Size{},
            JsonField:    "w",
            JsonValues:   float64s(1, 10, 1000),
            StructField:  "Width",
            StructValues: []int{1, 10, 1000},
        },
        StructTest{
            Struct:       ts.Size{},
            JsonField:    "h",
            JsonValues:   float64s(1, 10, 1000),
            StructField:  "Height",
            StructValues: []int{1, 10, 1000},
        },
        StructTest{
            Struct:       ts.Size{},
            JsonField:    "resize",
            JsonValues:   []interface{}{"fit", "crop"},
            StructField:  "Resize",
            StructValues: []string{"fit", "crop"},
        },
        StructTest{
            Struct:       ts.Sizes{},
            JsonField:    "large",
            JsonValues:   []interface{}{map[string]interface{}{"w": float64(100), "h": float64(300), "resize": "fit"}},
            StructField:  "Large",
            StructValues: []ts.Size{ts.Size{100, 300, "fit"}},
        },
        StructTest{
            Struct:       ts.Url{},
            JsonField:    "url",
            JsonValues:   []interface{}{"foo", "https://dev.twitter.com/docs/tweet-entities"},
            StructField:  "Url",
            StructValues: []string{"foo", "https://dev.twitter.com/docs/tweet-entities"},
        },
        StructTest{
            Struct:       ts.Url{},
            JsonField:    "display_url",
            JsonValues:   []interface{}{"foo", "https://dev.twitter.com/docs/tweet-entities"},
            StructField:  "DisplayUrl",
            StructValues: []string{"foo", "https://dev.twitter.com/docs/tweet-entities"},
        },
        StructTest{
            Struct:       ts.Url{},
            JsonField:    "expanded_url",
            JsonValues:   []interface{}{nil, "foo", "https://dev.twitter.com/docs/tweet-entities"},
            StructField:  "ExpandedUrl",
            StructValues: []*string{nil, straddr("foo"), straddr("https://dev.twitter.com/docs/tweet-entities")},
        },
        StructTest{
            Struct:       ts.Url{},
            JsonField:    "indices",
            JsonValues:   [][]interface{}{float64s(5, 10), float64s(0, 9)},
            StructField:  "Indices",
            StructValues: []ts.IndexPair{ts.IndexPair{5, 10}, ts.IndexPair{0, 9}},
        },
        StructTest{
            Struct:       ts.Mention{},
            JsonField:    "id",
            JsonValues:   float64s(1, 22, 555),
            StructField:  "Id",
            StructValues: []int64{1, 22, 555},
        },
        StructTest{
            Struct:       ts.Mention{},
            JsonField:    "id_str",
            JsonValues:   []interface{}{"1", "22", "12345"},
            StructField:  "IdStr",
            StructValues: []string{"1", "22", "12345"},
        },
        StructTest{
            Struct:       ts.Mention{},
            JsonField:    "screen_name",
            JsonValues:   []interface{}{"bill", "bob"},
            StructField:  "ScreenName",
            StructValues: []string{"bill", "bob"},
        },
        StructTest{
            Struct:       ts.Mention{},
            JsonField:    "full_name",
            JsonValues:   []interface{}{"Bruce Wayne"},
            StructField:  "FullName",
            StructValues: []string{"Bruce Wayne"},
        },
        StructTest{
            Struct:       ts.Mention{},
            JsonField:    "indices",
            JsonValues:   [][]interface{}{float64s(5, 10), float64s(0, 9)},
            StructField:  "Indices",
            StructValues: []ts.IndexPair{ts.IndexPair{5, 10}, ts.IndexPair{0, 9}},
        },
        StructTest{
            Struct:       ts.Hashtag{},
            JsonField:    "indices",
            JsonValues:   [][]interface{}{float64s(5, 10), float64s(0, 9)},
            StructField:  "Indices",
            StructValues: []ts.IndexPair{ts.IndexPair{5, 10}, ts.IndexPair{0, 9}},
        },
        StructTest{
            Struct:       ts.Hashtag{},
            JsonField:    "text",
            JsonValues:   []interface{}{"#batman"},
            StructField:  "Text",
            StructValues: []string{"#batman"},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "contributors_enabled",
            JsonValues:   []interface{}{true, false},
            StructField:  "ContributorsEnabled",
            StructValues: []bool{true, false},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "created_at",
            JsonValues:   []interface{}{"Wed Aug 27 13:08:45 +0000 2008"},
            StructField:  "CreatedAt",
            StructValues: []ts.Time{mustParseTime("Wed Aug 27 13:08:45 +0000 2008")},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "default_profile",
            JsonValues:   []interface{}{true, false},
            StructField:  "DefaultProfile",
            StructValues: []bool{true, false},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "description",
            JsonValues:   []interface{}{nil, "Hey now!", "I'm Batman"},
            StructField:  "Description",
            StructValues: []*string{nil, straddr("Hey now!"), straddr("I'm Batman")},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "favourites_count",
            JsonValues:   float64s(0, 1, 50),
            StructField:  "FavouritesCount",
            StructValues: []int{0, 1, 50},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "follow_request_sent",
            JsonValues:   []interface{}{nil, true, false},
            StructField:  "FollowRequestSent",
            StructValues: []*bool{nil, booladdr(true), booladdr(false)},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "following",
            JsonValues:   []interface{}{nil, true, false},
            StructField:  "Following",
            StructValues: []*bool{nil, booladdr(true), booladdr(false)},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "followers_count",
            JsonValues:   float64s(0, 1, 100000),
            StructField:  "FollowersCount",
            StructValues: []int{0, 1, 100000},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "friends_count",
            JsonValues:   float64s(0, 1, 100000),
            StructField:  "FriendsCount",
            StructValues: []int{0, 1, 100000},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "geo_enabled",
            JsonValues:   []interface{}{true, false},
            StructField:  "GeoEnabled",
            StructValues: []bool{true, false},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "id",
            JsonValues:   float64s(1, 10, 25000),
            StructField:  "Id",
            StructValues: []int64{1, 10, 25000},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "id_str",
            JsonValues:   []interface{}{"1", "22", "12345"},
            StructField:  "IdStr",
            StructValues: []string{"1", "22", "12345"},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "is_translator",
            JsonValues:   []interface{}{true, false},
            StructField:  "IsTranslator",
            StructValues: []bool{true, false},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "lang",
            JsonValues:   []interface{}{"", "en", "fr"},
            StructField:  "Language",
            StructValues: []string{"", "en", "fr"},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "listed_count",
            JsonValues:   float64s(1, 10, 25000),
            StructField:  "ListedCount",
            StructValues: []int{1, 10, 25000},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "location",
            JsonValues:   []interface{}{nil, "Here", "Edmonton"},
            StructField:  "Location",
            StructValues: []*string{nil, straddr("Here"), straddr("Edmonton")},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "name",
            JsonValues:   []interface{}{"Bill", "Bruce Wayne", ""},
            StructField:  "Name",
            StructValues: []string{"Bill", "Bruce Wayne", ""},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "profile_background_color",
            JsonValues:   []interface{}{nil, "e8f2f7", "ffffff"},
            StructField:  "ProfileBackgroundColor",
            StructValues: []*string{nil, straddr("e8f2f7"), straddr("ffffff")},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "profile_background_image_url",
            JsonValues:   []interface{}{nil, "http://twitter.com/bg.png"},
            StructField:  "ProfileBackgroundImageUrl",
            StructValues: []*string{nil, straddr("http://twitter.com/bg.png")},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "profile_background_image_url_https",
            JsonValues:   []interface{}{nil, "https://twitter.com/bg.png"},
            StructField:  "ProfileBackgroundImageUrlHttps",
            StructValues: []*string{nil, straddr("https://twitter.com/bg.png")},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "profile_background_tile",
            JsonValues:   []interface{}{true, false},
            StructField:  "ProfileBackgroundTile",
            StructValues: []bool{true, false},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "profile_image_url",
            JsonValues:   []interface{}{"https://twitter.com/bg.png"},
            StructField:  "ProfileImageUrl",
            StructValues: []string{"https://twitter.com/bg.png"},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "profile_image_url_https",
            JsonValues:   []interface{}{"https://twitter.com/bg.png"},
            StructField:  "ProfileImageUrlHttps",
            StructValues: []string{"https://twitter.com/bg.png"},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "profile_link_color",
            JsonValues:   []interface{}{"ffffff", "abcdef"},
            StructField:  "ProfileLinkColor",
            StructValues: []string{"ffffff", "abcdef"},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "profile_sidebar_border_color",
            JsonValues:   []interface{}{"ffffff", "abcdef"},
            StructField:  "ProfileSidebarBorderColor",
            StructValues: []string{"ffffff", "abcdef"},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "profile_sidebar_fill_color",
            JsonValues:   []interface{}{"ffffff", "abcdef"},
            StructField:  "ProfileSidebarFillColor",
            StructValues: []string{"ffffff", "abcdef"},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "profile_text_color",
            JsonValues:   []interface{}{"ffffff", "abcdef"},
            StructField:  "ProfileTextColor",
            StructValues: []string{"ffffff", "abcdef"},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "profile_use_background_image",
            JsonValues:   []interface{}{true, false},
            StructField:  "ProfileUseBackgroundImage",
            StructValues: []bool{true, false},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "protected",
            JsonValues:   []interface{}{true, false},
            StructField:  "Protected",
            StructValues: []bool{true, false},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "screen_name",
            JsonValues:   []interface{}{"batman", "twitter"},
            StructField:  "ScreenName",
            StructValues: []string{"batman", "twitter"},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "show_all_inline_media",
            JsonValues:   []interface{}{true, false},
            StructField:  "ShowAllInlineMedia",
            StructValues: []bool{true, false},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "statuses_count",
            JsonValues:   float64s(0, 10, 2500),
            StructField:  "StatusesCount",
            StructValues: []int{0, 10, 2500},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "time_zone",
            JsonValues:   []interface{}{nil, "Pacific Time (US & Canada)"},
            StructField:  "TimeZone",
            StructValues: []*string{nil, straddr("Pacific Time (US & Canada)")},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "url",
            JsonValues:   []interface{}{nil, "https://twitter.com/bg.png"},
            StructField:  "Url",
            StructValues: []*string{nil, straddr("https://twitter.com/bg.png")},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "utc_offset",
            JsonValues:   float64s(nil, 0, 3600, -18000),
            StructField:  "UtcOffset",
            StructValues: []*int{nil, intaddr(0), intaddr(3600), intaddr(-18000)},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "verified",
            JsonValues:   []interface{}{true, false},
            StructField:  "Verified",
            StructValues: []bool{true, false},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "withheld_in_countries",
            JsonValues:   []interface{}{"US, CA", ""},
            StructField:  "WithheldInCountries",
            StructValues: []string{"US, CA", ""},
        },
        StructTest{
            Struct:       ts.User{},
            JsonField:    "withheld_scope",
            JsonValues:   []interface{}{"user", "status"},
            StructField:  "WithheldScope",
            StructValues: []string{"user", "status"},
        },
    }
)
